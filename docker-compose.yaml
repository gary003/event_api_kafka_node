services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.0
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - '2181:2181'
    networks:
      - kafka-net

  data_generator:
    build:
      context: ./data_generator
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.9.0
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    ports:
      - '9092:9092'
      - '29092:29092'
    healthcheck:
      test: ['CMD', 'kafka-broker-api-versions', '--bootstrap-server', 'localhost:9092']
      interval: 15s
      timeout: 25s
      retries: 15
      start_period: 60s
    networks:
      - kafka-net

  app:
    build: .
    environment:
      KAFKA_BROKERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - '3000:3000'
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
